[Application Options]

; DCR LN Liquidity Provider Config File
;
; Note on time duration parameters: These parameters are parsed according to
; the Go time.Duration rules. That is, Xs is parsed as X seconds, Ym is parsed
; as Y minutes and Zh is parsed as Z hours. For example:
;   10s -> 10 seconds
;   5m10s -> 5 minutes and 10 seconds
;   1h5m10s -> 1 hour, 5 minutes and 10 seconds
;   24h -> 24 hours (aka 1 day)
;   168h -> 168 hours (aka 7 days, aka 1 week)


; Location where files are stored.
; appdata = ~/.dcrlnlpd/data

; Log verbosity level (trace, debug, info, warn, critical).
; debuglevel = info

; Network to use (defaults to mainnet).
; mainnet = 1
; testnet = 1
; simnet = 1

; Address of the dcrlnd node to use.
; lnrpchost = localhost:10009

; Path to the TLS cert of dcrlnd's RPC endpoint.
; lntlscertpath = ~/.dcrlnd/tls.cert

; Path to the macaroon file needed to auth against dcrlnd.
; lnmacaroonpath= ~/.dcrlnd/data/chain/decred/mainnet/admin.macaroon

; Public addresses where the LP node is accessible in the LN network (using the
; LN gossip protocol). Clients will connect to one of this addresses before
; attempting to open a channel. May be specified multiple times.
; lnnodeaddr = 1.2.3.4:9735
; lnnodeaddr = [2001:0db8:85a3:0000:0000:8a2e:0370:7334]:9735
; lnnodeaddr = example.com:9735

; Addresses and ports to bind the network listeners to. If unspencified,
; defaults to all addresses in the following ports for each network:
;   - mainnet: 9130
;   - testnet: 19130
;   - simnet: 29130
; Multiple entries can be added.
; listen = 127.0.0.1:3030


; TLS Config options. If disabletls is false (default), tlscert and tlskey
; MUST be specified. Use the `gencerts` decred tool to generate an appropriate
; cert, based on the exposed addresses/domains of the service.

; tlscert = /path/to/tls.cert
; tlskey = /path/to/tls.key
; disabletls = false

; Address and port to bind the profiler http endpoint.
; profile = localhost:8000

[Open Channel Policy]

; The following sets the policy for deciding when to allow clients to request
; new channel openings.

; Minimum channel size that will be opened in dcr. Must be >= 0.0004.
; openpolicy.minchansize = 0.0004

; Maximum channel size that will be opened in dcr. Must be <= 10.
; openpolicy.maxchansize = 1.0

; Maximum number of channels opened to the same node. Must be > 0.
; openpolicy.maxnbchans = 2

; Maximum number of channels the dcrlnd node is configured to accept
; (must be set to a value <= than the --maxpendingchannels dcrlnd config).
; Note this is the _global_ amount of pending open channels, _not_ a by-node
; amount.
; openpolicy.maxpendingchans = 1

; Rate that is charged (as a percentage of the channel size) to create the
; channel.
; openpolicy.invoicefeerate = 0.05

; Key to restrict access to channel creation.
; openpolicy.key = some_secret_key


[Close Channel Policy]

; The following sets the policy for deciding when to close channels. The policy
; check tests whether the rate of funds sent through a channel is higher then
; a required minimum rate, otherwise it will close the channel. In other words,
; the following must be maintained on every channel:
;
;   (AtomsSent / ChannelLifetime) > (RequiredAtomsSent / RequiredInterval)
;
; Evaluated at every check interval, otherwise the channel is closed.

; How often to evaluate the close policy on channels.
; closepolicy.checkinterval = 1h

; Minimum amount of time the channel will remain active before the policy check
; is performed.
; closepolicy.minchanlifetime = 168h

; Amount of dcr that must be sent every required interval for the channel to
; be considered active.
; closepolicy.requiredamountsent = 0.0001

; Required interval for policy.
; closepolicy.requiredinterval = 24h
